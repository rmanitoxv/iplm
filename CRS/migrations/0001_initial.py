# Generated by Django 3.2 on 2021-06-23 17:38

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicYearInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yearstarted', models.CharField(max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Year must be entered in format: 20XX', regex='^20\\d{2}$')], verbose_name='Year Started')),
                ('yearended', models.CharField(max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Year must be entered in format: 20XX', regex='^20\\d{2}$')], verbose_name='Year Ended')),
                ('semester', models.CharField(max_length=150, null=True, verbose_name='Semester')),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collegeName', models.CharField(max_length=150, null=True, verbose_name='College Name')),
            ],
        ),
        migrations.CreateModel(
            name='crsGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crsFile', models.FileField(blank=True, null=True, upload_to='crsSubmission/')),
            ],
        ),
        migrations.CreateModel(
            name='FacultyApplicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastName', models.CharField(max_length=150)),
                ('firstName', models.CharField(max_length=150)),
                ('middleName', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('phoneNumber', models.CharField(max_length=150)),
                ('CV', models.FileField(blank=True, null=True, upload_to='facultyApplicant/')),
                ('certificates', models.FileField(blank=True, null=True, upload_to='facultyApplicant/')),
                ('credentials', models.FileField(blank=True, null=True, upload_to='facultyApplicant/')),
                ('TOR', models.FileField(blank=True, null=True, upload_to='facultyApplicant/')),
            ],
        ),
        migrations.CreateModel(
            name='HD_DroppingForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Admin_Upload', models.FileField(upload_to='Student/Dropping Form')),
            ],
        ),
        migrations.CreateModel(
            name='RoomSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classTimeIn', models.TimeField(max_length=200)),
                ('classTimeOut', models.TimeField(max_length=200, null=True)),
                ('classDay', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('thursday', 'thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShifterApplicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('studentID', models.CharField(max_length=100, null=True, verbose_name='StudentNumber')),
                ('department', models.CharField(max_length=100, null=True, verbose_name='Department')),
                ('lname', models.CharField(max_length=100, null=True, verbose_name='LastName')),
                ('fname', models.CharField(max_length=100, null=True, verbose_name='FirstName')),
                ('mname', models.CharField(max_length=100, null=True, verbose_name='MiddleName')),
                ('eadd', models.CharField(max_length=100, null=True, verbose_name='EmailAddress')),
                ('cnum', models.CharField(max_length=100, null=True, verbose_name='ContactNumber')),
                ('studentStudyplan', models.FileField(blank=True, null=True, upload_to='ShifterSubmission/')),
                ('studentshifterletter', models.FileField(blank=True, null=True, upload_to='ShifterSubmission/')),
                ('studentGrade', models.FileField(blank=True, null=True, upload_to='ShifterSubmission/')),
                ('remarks', models.CharField(default='Submitted', max_length=150, verbose_name='Status')),
                ('shifter_dateSubmitted', models.DateTimeField(default=datetime.datetime(2021, 6, 23, 17, 38, 13, 176333, tzinfo=utc))),
                ('signature1', models.ImageField(blank=True, null=True, upload_to='ShifterSign/')),
                ('signature2', models.ImageField(blank=True, null=True, upload_to='ShifterSign/')),
            ],
        ),
        migrations.CreateModel(
            name='subjectInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subjectCode', models.CharField(max_length=50, null=True, unique=True, verbose_name='Subject Code')),
                ('subjectName', models.CharField(max_length=100, null=True, verbose_name='Subject Name')),
                ('subjectPrerequisite', models.CharField(blank=True, max_length=100, null=True, verbose_name='Pre-requisite')),
                ('yearstanding', models.CharField(blank=True, max_length=100, null=True, verbose_name='Year Standing')),
                ('college', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.college', verbose_name='College')),
            ],
        ),
        migrations.CreateModel(
            name='TransfereeApplicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('studentID', models.CharField(max_length=100, null=True, verbose_name='StudentNumber')),
                ('department', models.CharField(max_length=100, null=True, verbose_name='Department')),
                ('lname', models.CharField(max_length=100, null=True, verbose_name='LastName')),
                ('fname', models.CharField(max_length=100, null=True, verbose_name='FirstName')),
                ('mname', models.CharField(max_length=100, null=True, verbose_name='MiddleName')),
                ('eadd', models.CharField(max_length=100, null=True, verbose_name='EmailAddress')),
                ('cnum', models.CharField(max_length=100, null=True, verbose_name='ContactNumber')),
                ('studentStudyplan', models.FileField(blank=True, null=True, upload_to='TransfereeSubmission/')),
                ('studentNote', models.FileField(blank=True, null=True, upload_to='TransfereeSubmission/')),
                ('studentHD', models.FileField(blank=True, null=True, upload_to='TransfereeSubmission/')),
                ('studentGoodmoral', models.FileField(blank=True, null=True, upload_to='TransfereeSubmission/')),
                ('studentGrade', models.FileField(blank=True, null=True, upload_to='TransfereeSubmission/')),
                ('remarks', models.CharField(default='Submitted', max_length=150, verbose_name='Status')),
                ('transfer_dateSubmitted', models.DateTimeField(default=datetime.datetime(2021, 6, 23, 17, 38, 13, 176333, tzinfo=utc))),
                ('signature1', models.ImageField(blank=True, null=True, upload_to='TransfereeSign/')),
                ('signature2', models.ImageField(blank=True, null=True, upload_to='TransfereeSign/')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('firstName', models.CharField(max_length=100)),
                ('middleName', models.CharField(max_length=100)),
                ('lastName', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=True)),
                ('is_chairperson', models.BooleanField(default=False)),
                ('is_faculty', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChairpersonInfo',
            fields=[
                ('cpersonUser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='CRS.user')),
            ],
        ),
        migrations.CreateModel(
            name='FacultyInfo',
            fields=[
                ('facultyUser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='CRS.user')),
                ('facultyID', models.CharField(max_length=50, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Faculty ID must be entered in format: 20XXXXXXX', regex='^20\\d{7}$')], verbose_name='Faculty ID')),
                ('facultyWorkstatus', models.CharField(choices=[('Full-Time', 'Full-Time'), ('Part-Time', 'Part-Time')], max_length=100, null=True, verbose_name='Work Status')),
                ('facultyGender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=50, null=True, verbose_name='Gender')),
                ('facultyCivilstatus', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Separated', 'Separated'), ('Widow', 'Widow')], max_length=150, null=True, verbose_name='Civil Status')),
                ('facultyCitizenship', models.CharField(choices=[('Filipino', 'Filipino'), ('Others', 'Others')], max_length=50, null=True, verbose_name='Citizenship')),
                ('facultyContact', models.CharField(max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Contact number must be entered in format: 09XXXXXXXXX', regex='^09\\d{9}$')], verbose_name='Contact Number')),
                ('facultyIn', models.CharField(blank=True, max_length=100, null=True, verbose_name='Time In')),
                ('facultyOut', models.CharField(blank=True, max_length=100, null=True, verbose_name='Time Out')),
                ('collegeID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.college', verbose_name='College')),
            ],
        ),
        migrations.CreateModel(
            name='StudentInfo',
            fields=[
                ('studentUser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='CRS.user')),
                ('studentID', models.CharField(max_length=50, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Faculty ID must be entered in format: 20XXXXXXX', regex='^20\\d{7}$')], verbose_name='Student ID')),
                ('studentGender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=50, null=True, verbose_name='Gender')),
                ('studentCitizenship', models.CharField(choices=[('Filipino', 'Filipino')], max_length=50, null=True, verbose_name='Citizenship')),
                ('studentCivilstatus', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married')], max_length=150, null=True, verbose_name='Civil Status')),
                ('studentContact', models.CharField(max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Contact number must be entered in format: 09XXXXXXXXX', regex='^09\\d{9}$')], verbose_name='Contact Number')),
                ('studentRegStatus', models.CharField(choices=[('Regular', 'Regular'), ('Irregular', 'Irregular')], max_length=100, null=True, verbose_name='Student Status')),
                ('studentType', models.CharField(choices=[('Old', 'Old'), ('New', 'New')], max_length=150, null=True, verbose_name='Student Type')),
                ('studentCourse', models.CharField(max_length=50, null=True, verbose_name='Pedigree')),
                ('studentYearlevel', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6')], max_length=150, null=True, verbose_name='Year Level')),
                ('studentCurriculum', models.CharField(max_length=50, null=True, validators=[django.core.validators.RegexValidator(message='Contact number must be entered in format: 20XX', regex='^20\\d{2}$')], verbose_name='Curriculum Year')),
                ('collegeID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.college', verbose_name='College')),
            ],
        ),
        migrations.CreateModel(
            name='RoomInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roomBuilding', models.CharField(choices=[('GL', 'GL'), ('GB', 'GB'), ('GK', 'GK'), ('GV', 'GV'), ('GCA', 'GCA'), ('TB', 'TB'), ('Gym', 'Gym')], max_length=200, null=True)),
                ('roomNumber', models.IntegerField()),
                ('roomType', models.CharField(max_length=200)),
                ('roomSchedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='CRS.roomschedule')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courseName', models.CharField(max_length=150, null=True, verbose_name='Course')),
                ('collegeId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='CRS.college', verbose_name='College')),
                ('chairperson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='CRS.chairpersoninfo')),
            ],
        ),
        migrations.CreateModel(
            name='curriculumInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('curriculumyear', models.CharField(max_length=100, null=True, verbose_name='Curriculum Year')),
                ('subjectUnits', models.CharField(max_length=100, null=True, verbose_name='Subject Units')),
                ('schoolYear', models.CharField(max_length=100, null=True, verbose_name='School Year')),
                ('schoolSem', models.CharField(max_length=100, null=True, verbose_name='School Sem')),
                ('blockCourse', models.CharField(max_length=100, null=True, verbose_name='Course')),
                ('departmentID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.department', verbose_name='Department')),
                ('subjectCode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.subjectinfo', verbose_name='Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Curricula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cYear', models.CharField(choices=[('First Year', 'First Year'), ('Second Year', 'Second Year'), ('Third Year', 'Third Year'), ('Fourth Year', 'Fourth Year'), ('Fifth Year', 'Fifth Year'), ('Sixth Year', 'Sixth Year')], max_length=100, null=True, verbose_name='Curriculum Year')),
                ('cSem', models.CharField(choices=[('First Semester', 'First Semester'), ('Second Semester', 'Second Semester'), ('Summer', 'Summer')], max_length=100, null=True, verbose_name='Curriculum Semester')),
                ('totalUnits', models.CharField(max_length=50, null=True, verbose_name='Total Units')),
                ('departmentID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='CRS.department', verbose_name='Department')),
            ],
        ),
        migrations.CreateModel(
            name='currchecklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subjectGrades', models.DecimalField(blank=True, choices=[(1.0, '1'), (1.25, '1.25'), (1.5, '1.50'), (1.75, '1.75'), (2, '2'), (2.25, '2.25'), (2.5, '2.5'), (2.75, '2.75'), (3.0, '3'), (5.0, '5')], decimal_places=2, max_digits=3, null=True, verbose_name='Subject Grades')),
                ('curriculumCode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.curriculuminfo', verbose_name='Subjects')),
            ],
        ),
        migrations.CreateModel(
            name='courseList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('courseCode', models.CharField(max_length=50, null=True, verbose_name='Course Code')),
                ('courseName', models.CharField(max_length=100, null=True, verbose_name='Course Name')),
                ('courseUnit', models.CharField(max_length=50, null=True, verbose_name='Units')),
                ('prerequisite', models.CharField(blank=True, max_length=100, null=True, verbose_name='Pre(Co)-Requisite')),
                ('counted_in_GWA', models.BooleanField(default=True)),
                ('curricula', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='CRS.curricula', verbose_name='Curriculum')),
            ],
        ),
        migrations.CreateModel(
            name='BlockSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blockYear', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=150, null=True, verbose_name='Block Year Level')),
                ('blockSection', models.CharField(max_length=50, null=True, verbose_name='Block Section')),
                ('blockCourse', models.CharField(max_length=50, null=True, verbose_name='Block Course')),
                ('curryear', models.CharField(max_length=50, null=True, verbose_name='Curriculum Year')),
                ('college', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='CRS.college', verbose_name='College')),
            ],
        ),
        migrations.CreateModel(
            name='SubjectSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionType', models.CharField(choices=[('Synchronous', 'Synchronous'), ('Asynchronous', 'Asynchronous')], max_length=200)),
                ('scheduleType', models.CharField(choices=[('Block', 'Block'), ('Subject', 'Subject')], max_length=200)),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('INACTIVE', 'INACTIVE')], max_length=200, null=True)),
                ('yearStanding', models.CharField(choices=[('First Year', 'First Year'), ('Second Year', 'Second Year'), ('Third Year', 'Third Year'), ('Fourth Year', 'Fourth Year'), ('Fifth Year', 'Fifth Year'), ('Sixth Year', 'Sixth Year'), ('Servicing Colleges', 'Servicing Colleges')], max_length=200, null=True)),
                ('blockSection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='CRS.blocksection')),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='CRS.roominfo')),
                ('roomSchedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='CRS.roomschedule')),
                ('subjectCode', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='CRS.subjectinfo')),
                ('faculty', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='CRS.facultyinfo')),
            ],
        ),
        migrations.CreateModel(
            name='studyPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admissionYr', models.CharField(blank=True, max_length=50, null=True, verbose_name='Admission Year')),
                ('curricula', models.CharField(blank=True, max_length=100, null=True, verbose_name='Dept & Sem')),
                ('approved', models.BooleanField(default=False)),
                ('studentinfo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='CRS.studentinfo', unique=True, verbose_name='Student')),
            ],
        ),
        migrations.CreateModel(
            name='studentScheduling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.IntegerField(null=True, verbose_name='Subject Section')),
                ('day', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], max_length=100, null=True, verbose_name='Day')),
                ('timeStart', models.TimeField()),
                ('timeEnd', models.TimeField()),
                ('room', models.CharField(max_length=100, null=True, verbose_name='Room')),
                ('type', models.CharField(choices=[('Asychronous', 'Asychronous'), ('Sychronous', 'Sychronous')], max_length=100, null=True, verbose_name='type')),
                ('realsection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.blocksection', verbose_name='Block Section')),
                ('subjectCode', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.curriculuminfo', verbose_name='Subjects')),
                ('instructor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.facultyinfo', verbose_name='Instructor')),
            ],
        ),
        migrations.AddField(
            model_name='studentinfo',
            name='departmentID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.department', verbose_name='Department'),
        ),
        migrations.AddField(
            model_name='studentinfo',
            name='studentSection',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.blocksection', verbose_name='Section'),
        ),
        migrations.CreateModel(
            name='spApplicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remarks', models.CharField(default='Submitted', max_length=25)),
                ('date', models.DateField(default=datetime.datetime(2021, 6, 23, 17, 38, 13, 176333, tzinfo=utc))),
                ('sdplan', models.FileField(blank=True, null=True, upload_to='spSubmission/')),
                ('comment', models.TextField(blank=True, max_length=150, null=True, verbose_name='Feedback')),
                ('studentID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.studentinfo', verbose_name='Student')),
            ],
        ),
        migrations.CreateModel(
            name='OjtApplicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ojtResume', models.FileField(blank=True, null=True, upload_to='ojtSubmission/')),
                ('ojtRecLetter', models.FileField(blank=True, null=True, upload_to='ojtSubmission/')),
                ('ojtWaiver', models.FileField(blank=True, null=True, upload_to='ojtSubmission/')),
                ('ojtAcceptForm', models.FileField(blank=True, null=True, upload_to='ojtSubmission/')),
                ('ojtCompanyProfile', models.FileField(blank=True, null=True, upload_to='ojtSubmission/')),
                ('ojtCompanyId', models.FileField(blank=True, null=True, upload_to='ojtSubmission/')),
                ('ojtMedcert', models.FileField(blank=True, null=True, upload_to='ojtSubmission/')),
                ('remarks', models.CharField(default='Submitted', max_length=150, verbose_name='Status')),
                ('comment', models.TextField(blank=True, max_length=150, null=True, verbose_name='Feedback')),
                ('ojt_dateSubmitted', models.DateTimeField(default=datetime.datetime(2021, 6, 23, 17, 38, 13, 176333, tzinfo=utc))),
                ('studentID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.studentinfo', verbose_name='Student')),
            ],
        ),
        migrations.CreateModel(
            name='loaForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genave', models.CharField(max_length=100, null=True, verbose_name='GWA')),
                ('sem', models.CharField(max_length=100, null=True, verbose_name='Effective From Sem')),
                ('sy', models.CharField(max_length=100, null=True, verbose_name='Effective From Sy')),
                ('sem2', models.CharField(max_length=100, null=True, verbose_name='Effective Until Sem')),
                ('sy2', models.CharField(max_length=100, null=True, verbose_name='Effective Until Sy')),
                ('reason', models.CharField(blank=True, max_length=100, null=True, verbose_name='Reason')),
                ('dof', models.DateField(max_length=100, null=True, verbose_name='Date of Filing')),
                ('studentID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='CRS.studentinfo', verbose_name='Student')),
            ],
        ),
        migrations.CreateModel(
            name='loaClearanceForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstEnrollment2', models.CharField(max_length=100, null=True, verbose_name='Semester (First enrollment in PLM)')),
                ('studentFirstSY2', models.CharField(max_length=100, null=True, verbose_name='School Year (First Enrollment in PLM)')),
                ('studentFirstCollege2', models.CharField(max_length=100, null=True, verbose_name='College (First Enrollment in PLM)')),
                ('lastEnrollment2', models.CharField(max_length=100, null=True, verbose_name='Semester (Last/Present enrollment in PLM)')),
                ('studentLastPCollege2', models.CharField(max_length=100, null=True, verbose_name='College (Last/Present Enrollment in PLM)')),
                ('studentLastPSY2', models.CharField(max_length=100, null=True, verbose_name='School year (Last/Present Enrollment in PLM)')),
                ('studentPurpose2', models.CharField(max_length=100, null=True, verbose_name='Purpose of Clearance')),
                ('studentOthers2', models.CharField(blank=True, max_length=100, null=True)),
                ('studentCurrentdate2', models.DateField(max_length=100, null=True, verbose_name='Current Date')),
                ('studentID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='CRS.studentinfo', verbose_name='Student')),
            ],
        ),
        migrations.CreateModel(
            name='LOAApplicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('studentLOAClearanceform', models.FileField(blank=True, null=True, upload_to='LOASubmission/')),
                ('studentStudyplan', models.FileField(blank=True, null=True, upload_to='LOASubmission/')),
                ('studentLOAletter', models.FileField(blank=True, null=True, upload_to='LOASubmission/')),
                ('studentLOAFORM', models.FileField(blank=True, null=True, upload_to='LOASubmission/')),
                ('studentChecklist', models.FileField(blank=True, null=True, upload_to='LOASubmission/')),
                ('remarks', models.CharField(default='Submitted', max_length=150, verbose_name='Status')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Feedback')),
                ('LOA_dateSubmitted', models.DateTimeField(default=datetime.datetime(2021, 6, 23, 17, 38, 13, 176333, tzinfo=utc))),
                ('signature1', models.ImageField(blank=True, null=True, upload_to='LOASign/')),
                ('signature2', models.ImageField(blank=True, null=True, upload_to='LOASign/')),
                ('studentID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.studentinfo', verbose_name='Student')),
            ],
        ),
        migrations.CreateModel(
            name='hdTransferCert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('studentSchool', models.CharField(max_length=100, null=True, verbose_name="School (Where you'll transfer)")),
                ('studentSchooladdress', models.CharField(max_length=100, null=True, verbose_name="School Address (Where you'll transfer)")),
                ('studentHomeaddress', models.CharField(max_length=100, null=True, verbose_name='Home Address')),
                ('studentCollege', models.CharField(max_length=100, null=True, verbose_name='College')),
                ('studentCredentials', models.CharField(max_length=100, null=True, verbose_name='Credentials')),
                ('studentFirstSY', models.CharField(max_length=100, null=True, verbose_name='School Year (First Enrollment in College)')),
                ('studentLastPSY', models.CharField(max_length=100, null=True, verbose_name='School Year (Last Enrollment in College)')),
                ('studentNoOfSem', models.CharField(max_length=100, null=True, verbose_name='No. of Semesters/Summers Attended')),
                ('studentDegree', models.CharField(max_length=100, null=True, verbose_name='Degree')),
                ('studentMonth', models.CharField(max_length=100, null=True, verbose_name='Month')),
                ('studentDay', models.CharField(max_length=100, null=True, verbose_name='Day')),
                ('studentYear', models.CharField(max_length=100, null=True, verbose_name='Year')),
                ('studentCurrentdate', models.DateField(max_length=100, null=True, verbose_name='Current Date')),
                ('studentID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='CRS.studentinfo', verbose_name='Student')),
            ],
        ),
        migrations.CreateModel(
            name='hdClearanceForm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstEnrollment', models.CharField(max_length=100, null=True, verbose_name='Semester (First enrollment in PLM)')),
                ('studentFirstSY', models.CharField(max_length=100, null=True, verbose_name='School Year (First Enrollment in PLM)')),
                ('studentFirstCollege', models.CharField(max_length=100, null=True, verbose_name='College (First Enrollment in PLM)')),
                ('lastEnrollment', models.CharField(max_length=100, null=True, verbose_name='Semester (Last/Present enrollment in PLM)')),
                ('studentLastPCollege', models.CharField(max_length=100, null=True, verbose_name='College (Last/Present Enrollment in PLM)')),
                ('studentLastPSY', models.CharField(max_length=100, null=True, verbose_name='School year (Last/Present Enrollment in PLM)')),
                ('studentPurpose', models.CharField(max_length=100, null=True, verbose_name='Purpose of Clearance')),
                ('studentOthers', models.CharField(blank=True, max_length=100, null=True, verbose_name='If you picked others please specify:')),
                ('studentCurrentdate', models.DateField(max_length=100, null=True, verbose_name='Current Date')),
                ('studentID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.studentinfo', verbose_name='Student')),
            ],
        ),
        migrations.CreateModel(
            name='hdApplicant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('studentDropform', models.FileField(blank=True, null=True, upload_to='hdSubmission/')),
                ('studentClearanceform', models.FileField(blank=True, null=True, upload_to='hdSubmission/')),
                ('studentTransfercert', models.FileField(blank=True, null=True, upload_to='hdSubmission/')),
                ('studentHdletter', models.FileField(blank=True, null=True, upload_to='hdSubmission/')),
                ('studentGrades', models.FileField(blank=True, null=True, upload_to='hdSubmission/')),
                ('stdParentsig', models.FileField(blank=True, null=True, upload_to='hdSubmission/')),
                ('remarks', models.CharField(default='Submitted', max_length=25)),
                ('comment', models.TextField(blank=True, max_length=150, null=True, verbose_name='Feedback')),
                ('hd_dateSubmitted', models.DateTimeField(default=datetime.datetime(2021, 6, 23, 17, 38, 13, 176333, tzinfo=utc))),
                ('studentID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.studentinfo', verbose_name='Student')),
            ],
        ),
        migrations.AddField(
            model_name='facultyinfo',
            name='departmentID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.department', verbose_name='Department'),
        ),
        migrations.AddConstraint(
            model_name='curricula',
            constraint=models.UniqueConstraint(fields=('departmentID', 'cYear', 'cSem'), name='unique_curriculum'),
        ),
        migrations.AddField(
            model_name='currchecklist',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.studentinfo', verbose_name='Student'),
        ),
        migrations.AddField(
            model_name='crsgrade',
            name='studentID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.studentinfo', verbose_name='Student'),
        ),
        migrations.AddConstraint(
            model_name='courselist',
            constraint=models.UniqueConstraint(fields=('curricula', 'courseCode'), name='course_outline'),
        ),
        migrations.AddField(
            model_name='blocksection',
            name='adviser',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CRS.facultyinfo'),
        ),
    ]
